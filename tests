import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager


class TestCurrencyConverter(unittest.TestCase):

    # Configure logging before the class definition
    logging.basicConfig(filename='test_results.log', level=logging.INFO)

    def setUp(self):
        self.driver = webdriver.Chrome(ChromeDriverManager().install())
        self.driver.implicitly_wait(10)  # Wait for elements up to 10 seconds

    def tearDown(self):
        self.driver.quit()

    def test_currency_conversion(self):
        url = "http://<your_web_app_container_name>:8000"  # Replace with actual URL
        self.driver.get(url)

        # Select "USD" in the "From" dropdown
        from_dropdown = self.driver.find_element(By.CSS_SELECTOR, ".from select")
        from_options = from_dropdown.find_elements(By.TAG_NAME, "option")
        for option in from_options:
            if option.text == "USD":
                option.click()
                break

        # Select "INR" in the "To" dropdown
        to_dropdown = self.driver.find_element(By.CSS_SELECTOR, ".to select")
        to_options = to_dropdown.find_elements(By.TAG_NAME, "option")
        for option in to_options:
            if option.text == "INR":
                option.click()
                break

        # Click the "Get Exchange Rate" button
        get_rate_button = self.driver.find_element(By.CSS_SELECTOR, "Button")
        get_rate_button.click()

        # Wait for the exchange rate message to be displayed
        exchange_rate_message = WebDriverWait(self.driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, ".msg"))
        )

        # Assert the displayed exchange rate
        self.assertEqual(exchange_rate_message.text, "1USD = 80INR")

        # Log the test result
        logging.info(f"Test Passed: Currency conversion from USD to INR successful")

if __name__ == "__main__":
    unittest.main()
